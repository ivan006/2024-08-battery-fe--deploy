import{af as l,ag as H,ah as k,ai as F,aj as T}from"./vendor.js";l.extend(H);l.extend(k);l.extend(F);l.extend(T);class A{static formatCasualTime(n,a){const s=l(),e=l(n),r=l(a),u=e.format("HH:mm"),i=r.format("HH:mm"),f=e.format("ddd"),m=r.format("ddd"),h=e.format("MMM Do"),p=r.format("MMM Do"),w=e.year(),D=r.year(),y=r.diff(e,"minute"),M=y/60,g=M/24,S=g/7;let $;if(y<60){const t=Math.round(y/30)*.5;$=`~${t} minute${t!==1?"s":""}`}else if(M<24){const t=Math.round(M*2)/2;$=`~${t} hour${t!==1?"s":""}`}else if(g<7){const t=Math.round(g*2)/2;$=`~${t} day${t!==1?"s":""}`}else{const t=Math.round(S*2)/2;$=`~${t} week${t!==1?"s":""}`}const j=e.isBefore(s.add(6,"day"));let c="";e.isSame(r,"day")?c=e.isSame(s,"day")?`Today, ${u} - ${i}`:`${f}, ${u} - ${i}`:j?c=`${f}, ${u} - ${m}, ${i}`:e.isSame(r,"month")?c=`${h}, ${f}, ${u} - ${p}, ${m}, ${i}`:e.isSame(r,"year")?c=`${h}, ${f}, ${u} - ${p}, ${m}, ${D}, ${i}`:c=`${h}, ${f}, ${w}, ${u} - ${p}, ${m}, ${D}, ${i}`;const o=e.diff(s,"minute"),v=r.diff(s,"minute");let d="";if(v<0)d="Event has finished";else if(o<=0&&v>=0)d="Event is happening now";else if(o<60){const t=Math.round(o/30)*.5;d=`~${t} minute${t!==1?"s":""} from now`}else if(o<1440){const t=Math.round(o/60*2)/2;d=`~${t} hour${t!==1?"s":""} from now`}else if(o<10080){const t=Math.round(o/1440*2)/2;d=`~${t} day${t!==1?"s":""} from now`}else if(o<43800){const t=Math.round(o/10080*2)/2;d=`~${t} week${t!==1?"s":""} from now`}else{const t=Math.round(o/43800*2)/2;d=`~${t} month${t!==1?"s":""} from now`}return{range:c,duration:$,comingUpHint:d}}static snakeToTitle(n){return n.split("_").map(a=>a.charAt(0).toUpperCase()+a.slice(1).toLowerCase()).join(" ")}static getIfMatchesAllChecks(n,a){for(const[s,e]of Object.entries(a))if(typeof e=="object"&&!Array.isArray(e)&&e!==null){if(e!=null&&e.value&&e.usageType==="timeRangeStart"&&e.value.range.start){const r=new Date(e.value.range.start),u=new Date(e.value.range.end),i=new Date(n[s]);return r<i&&i<u}}else if(e!==null)return n[s]==e;return!0}static prepareFiltersForSupabase(n){let a=[];for(const[s,e]of Object.entries(n))typeof e=="object"&&!Array.isArray(e)&&e!==null?e!=null&&e.value&&e.usageType==="timeRangeStart"&&e.value.range.start&&(a.push(`${s}=gte.${e.value.range.start}`),a.push(`${s}=lte.${e.value.range.end}`)):e!==null&&a.push(`${s}=eq.${e}`);return a.join("&")}static prepareFiltersForLaravel(n){let a={filter:{}};for(const[s,e]of Object.entries(n))a.filter[s]=e;return a}static prepareRelationsForSupabase(n){let a=["*"];for(const e of n)a.push(`${e}(*)`);return{select:a.join(",")}}static prepareRelationsForLaravel(n){let a=[];for(const e of n)a.push(e);return{include:a.join(",")}}static capitalizeFirstLetter(n){return n.charAt(0).toUpperCase()+n.slice(1)}}export{A as H};
