import{b7 as l,b8 as H,b9 as j,ba as k,bb as F}from"./vendor.js";l.extend(H);l.extend(j);l.extend(k);l.extend(F);class A{static formatCasualTime(s,n){const a=l(),e=l(s),r=l(n),u=e.format("HH:mm"),i=r.format("HH:mm"),f=e.format("ddd"),m=r.format("ddd"),p=e.format("MMM Do"),h=r.format("MMM Do"),w=e.year(),D=r.year(),y=r.diff(e,"minute"),M=y/60,g=M/24,b=g/7;let $;if(y<60){const t=Math.round(y/30)*.5;$=`~${t} minute${t!==1?"s":""}`}else if(M<24){const t=Math.round(M*2)/2;$=`~${t} hour${t!==1?"s":""}`}else if(g<7){const t=Math.round(g*2)/2;$=`~${t} day${t!==1?"s":""}`}else{const t=Math.round(b*2)/2;$=`~${t} week${t!==1?"s":""}`}const S=e.isBefore(a.add(6,"day"));let c="";e.isSame(r,"day")?c=e.isSame(a,"day")?`Today, ${u} - ${i}`:`${f}, ${u} - ${i}`:S?c=`${f}, ${u} - ${m}, ${i}`:e.isSame(r,"month")?c=`${p}, ${f}, ${u} - ${h}, ${m}, ${i}`:e.isSame(r,"year")?c=`${p}, ${f}, ${u} - ${h}, ${m}, ${D}, ${i}`:c=`${p}, ${f}, ${w}, ${u} - ${h}, ${m}, ${D}, ${i}`;const o=e.diff(a,"minute"),v=r.diff(a,"minute");let d="";if(v<0)d="Event has finished";else if(o<=0&&v>=0)d="Event is happening now";else if(o<60){const t=Math.round(o/30)*.5;d=`~${t} minute${t!==1?"s":""} from now`}else if(o<1440){const t=Math.round(o/60*2)/2;d=`~${t} hour${t!==1?"s":""} from now`}else if(o<10080){const t=Math.round(o/1440*2)/2;d=`~${t} day${t!==1?"s":""} from now`}else if(o<43800){const t=Math.round(o/10080*2)/2;d=`~${t} week${t!==1?"s":""} from now`}else{const t=Math.round(o/43800*2)/2;d=`~${t} month${t!==1?"s":""} from now`}return{range:c,duration:$,comingUpHint:d}}static snakeToTitle(s){return s.split("_").map(n=>n.charAt(0).toUpperCase()+n.slice(1).toLowerCase()).join(" ")}static getIfMatchesAllChecks(s,n){for(const[a,e]of Object.entries(n))if(typeof e=="object"&&!Array.isArray(e)&&e!==null){if(e!=null&&e.value&&e.usageType==="timeRangeStart"&&e.value.range.start){const r=new Date(e.value.range.start),u=new Date(e.value.range.end),i=new Date(s[a]);return r<i&&i<u}}else if(e!==null)return s[a]==e;return!0}static prepareFiltersForSupabase(s){let n=[];for(const[a,e]of Object.entries(s))typeof e=="object"&&!Array.isArray(e)&&e!==null?e!=null&&e.value&&e.usageType==="timeRangeStart"&&e.value.range.start&&(n.push(`${a}=gte.${e.value.range.start}`),n.push(`${a}=lte.${e.value.range.end}`)):e!==null&&n.push(`${a}=eq.${e}`);return n.join("&")}static prepareFiltersForLaravel(s){let n={filter:{}};for(const[a,e]of Object.entries(s))n.filter[a]=e;return n}static prepareRelationsForSupabase(s){let n=["*"];for(const e of s)n.push(`${e}(*)`);return{select:n.join(",")}}static prepareRelationsForLaravel(s){let n=[];for(const e of s)n.push(e);return{include:n.join(",")}}static capitalizeFirstLetter(s){return s.charAt(0).toUpperCase()+s.slice(1)}}export{A as H};
